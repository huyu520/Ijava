package com.hy.base.type;

/**
 * 作用:位运算测试类 Java提供的位运算符有：左移( << )、右移( >> ) 、无符号右移( >>> ) 、位与( & ) 、位或( | )、位非(
 * ~ )、位异或( ^ )，除了位非( ~ )是一元操作符外，其它的都是二元操作符。
 * 
 * @author wb-hy292092
 * @date 2017年8月2日 上午10:55:31
 */
public class BitTest {

	public static void main(String[] args) {
		int a = 2, b = 3;
		// 位与：第一个操作数的的第n位于第二个操作数的第n位如果都是1，那么结果的第n为也为1，否则为0
		System.out.println("位运算2 & 3 =" + (2 & 3));
		// 位或操作：第一个操作数的的第n位于第二个操作数的第n位 只要有一个是1，那么结果的第n为也为1，否则为0
		System.out.println("位运算2 | 3 =" + (2 | 3));
		// 位异或：第一个操作数的的第n位于第二个操作数的第n位 相反，那么结果的第n为也为1，否则为0
		System.out.println("位运算2 ^ 3 =" + (2 ^ 3));
		// 7、位非( ~ ) 位非是一元操作符
		System.out.println("位运算~2 =" + (~2));
		//1、左移( << )	低位补0
		System.out.println("位运算2<<3 =" + (2<<3));
		//2、右移( >> ) ，右移同理，只是方向不一样罢了(感觉和没说一样) 高位补0
		System.out.println("位运算2<<3 =" + (2>>3));
		//3、无符号右移( >>> )

		/*
		 * 由位运算操作符衍生而来的有：
		 * 
		 * &= 按位与赋值 |= 按位或赋值 ^= 按位非赋值 >>= 右移赋值 >>>= 无符号右移赋值 <<= 赋值左移
		 */

	}
}
